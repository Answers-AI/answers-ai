version: '3'

services:
  app:
    build:
      context: .
      dockerfile: web.Dockerfile
    restart: always
    ports:
      - '3000:3000'
    #command: pnpm dev
    environment:
      - AIRTABLE_API_KEY=${AIRTABLE_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - JIRA_API=${JIRA_API}
      - CONTENTFUL_TOKEN=${CONTENTFUL_TOKEN}
      - CONTENTFUL_SPACE=${CONTENTFUL_SPACE}
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - PINECONE_INDEX=${PINECONE_INDEX}
      - PINECONE_INDEX_NAMESPACE=${PINECONE_INDEX_NAMESPACE}
      - PINECONE_ENVIRONMENT=${PINECONE_ENVIRONMENT}
      - SLACK_TOKEN=${SLACK_TOKEN}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - INNGEST_EVENT_KEY=${INNGEST_EVENT_KEY}
      - INNGEST_SIGNING_KEY=${INNGEST_SIGNING_KEY}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - GITHUB_ID=${GITHUB_ID}
      - GITHUB_SECRET=${GITHUB_SECRET}
      - VERCEL_URL=${VERCEL_URL}
      - PROMPT_LAYER_API_KEY=${PROMPT_LAYER_API_KEY}
      - VITE_API_URL=${VITE_API_URL}
      - VITE_APP_URL=${VITE_APP_URL}
      - NEXT_PUBLIC_DOMAIN=${NEXT_PUBLIC_DOMAIN}
      - LANGCHAIN_HANDLER=${LANGCHAIN_HANDLER}
      - FLAGSMITH_ENVIRONMENT_ID=${FLAGSMITH_ENVIRONMENT_ID}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - ATLASSIAN_CLIENT_ID=${ATLASSIAN_CLIENT_ID}
      - ATLASSIAN_CLIENT_SECRET=${ATLASSIAN_CLIENT_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - SLACK_CLIENT_ID=${SLACK_CLIENT_ID}
      - SLACK_CLIENT_SECRET=${SLACK_CLIENT_SECRET}
      - PERCY_TOKEN=${PERCY_TOKEN}
      - DISABLE_SENTRY=${DISABLE_SENTRY}
      - AWS_S3_REGION=${AWS_S3_REGION}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
  # inngest:
  #   image: node:18
  #   working_dir: /app/packages/db
  #   volumes:
  #     - .:/app
  #   ports:
  #     - '8288:8288'
  #   command: npx inngest-cli@latest dev -u http://127.0.0.1:3000/api/inngest
  # studio:
  #   image: node:18
  #   working_dir: /app/packages/db
  #   volumes:
  #     - .:/app
  #   ports:
  #     - '5555:5555'
  #   command: npx prisma studio
  #   environment:
  #     - DATABASE_URL=postgresql://example_user:example_password@postgres:5432/example_db?schema=public
  #   depends_on:
  #     - postgres
  redis:
    image: redis:latest
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
  postgres:
    image: postgres:latest
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_PORT: 5432
      POSTGRES_USER: example_user
      POSTGRES_PASSWORD: example_password
      POSTGRES_DB: example_db

  # langchain-frontend:
  #   image: notlangchain/langchainplus-frontend:latest
  #   ports:
  #     - 4173:4173
  #   environment:
  #     - BACKEND_URL=http://langchain-backend:8000
  #     - PUBLIC_BASE_URL=http://localhost:8000
  #     - PUBLIC_DEV_MODE=true
  #   depends_on:
  #     - langchain-backend
  # langchain-backend:
  #   image: notlangchain/langchainplus:latest
  #   environment:
  #     - PORT=8000
  #     - LANGCHAIN_ENV=local
  #   ports:
  #     - 8000:8000
  #   depends_on:
  #     - langchain-db
  # langchain-db:
  #   image: postgres:14.1
  #   environment:
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_DB=postgres
volumes:
  postgres_data:
  redis_data:
